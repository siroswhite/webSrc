###*
  @class web.color
    web上で使用する色情報を扱います。
###
core = require("core")

#==============================================================================
# method
#==============================================================================
###*
  @method getBaseColorList
  指定したHSLからベースカラー一覧を取得します
  @param {object} HSL HSLデータ
  @return {object} ベースカラー一覧
###
exports.getBaseColorList = (HSL) ->
  monoHSL = core.obj.clone(HSL)
  monoHSL["S"] = 0
  
  reverseMonoHSL = core.obj.clone(HSL)
  reverseMonoHSL["S"] = 0
  reverseMonoHSL["L"] = 100 - HSL["L"]
  
  return {
    base: core.calc.hslToRGB(HSL)
    reverse: $.xcolor.complementary(core.calc.hslToRGB(HSL))
    sepia: $.xcolor.sepia(core.calc.hslToRGB(HSL))
    black: "#000"
    white: "#fff"
    blue: "#11c"
    mono: core.calc.hslToRGB(monoHSL)
    reverseMono: core.calc.hslToRGB(reverseMonoHSL)
  }

###*
  @method getXColorList
  指定したベースカラーリストから派生したカラーリストを取得します。
  @param {object} baseColorList ベースカラーリスト
  @return {object} 派生後のカラーリスト
###
exports.getColorList = (baseColorList) ->
  addColorList = (list, name, xColor) ->
    list[name + "_normal"] = xColor
    list[name + "_dim"] = $.xcolor.subtractive("#eeeeee", xColor)
    list[name + "_dark"] = $.xcolor.darken(xColor)
    list[name + "_moreDark"] = $.xcolor.darken($.xcolor.darken(xColor))
    list[name + "_light"] = $.xcolor.lighten(xColor)
    list[name + "_moreLight"] = $.xcolor.lighten($.xcolor.lighten(xColor))
    list[name + "_webSafe"] = $.xcolor.webround(xColor)
  
  colorList = {}
  for name, baseColor of baseColorList
    triadColorList = $.xcolor.triad(baseColor)
    addColorList(colorList, name, triadColorList[0])
    if name == "base" || name == "reverse"
      addColorList(colorList, name + "Second", triadColorList[1])
      addColorList(colorList, name + "Third", triadColorList[2])
  
  return colorList

###*
  @method getXColorList
  getColorListで取得できる色の名前一覧を取得します。
  @return {object} 名前一覧
###
exports.getColorName = () ->
  colorNameList = {
    base: []
    side: []
  }
  colorList = @getColorList(@getBaseColorList({H:"0", S:"0", L:"0"}))
  
  for key, data of colorList
    colorNameList.base.push(key.split("_")[0])
    colorNameList.side.push(key.split("_")[1])
  colorNameList.base = core.array.repFilter(colorNameList.base)
  colorNameList.side = core.array.repFilter(colorNameList.side)
  
  colorNameList