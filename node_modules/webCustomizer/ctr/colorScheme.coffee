#==============================================================================
# require
#==============================================================================
core = require("core")
web = require("web")
data = require("../data")
ctr_css = require("./css")

#==============================================================================
# interface
#==============================================================================
#------------------------------------------------------------------------------
# init
#------------------------------------------------------------------------------
exports.init = () ->
  init_colorPicker = () ->
    $('#colorpicker_debug').farbtastic('#colorInput_debug')
    $.farbtastic('#colorpicker_debug').setColor(core.calc.hslToRGB(data.HSL))
  init_colorPicker()
  #@setColorScheme()
  
  #----------------------------------------------------------------------------
  # colorChange
  #----------------------------------------------------------------------------
  $('#colorInput_debug').bind 'change', (event) =>
    data.HSL = getHSL()
    basecolorList = web.color.getBaseColorList(data.HSL)
    data.colorList = web.color.getColorList(basecolorList)
    @setColorScheme($("#webeleName_input").val())
    for key_ele in webele.eleList
      ctr_css.setCSSBorder(key_ele)
      ctr_css.setCSSShadow(key_ele)
      ctr_css.setCSSFont(key_ele)
      ctr_css.setCSSGradient(key_ele)
      ctr_css.setCSSAnimation(key_ele)


exports.setColorScheme = (webeleName) ->
  responsiveName = web.size.getInnerWidthName()
  animationSelect = $("#animationState_select").val()
  
  $("[data-" + data.name + "='" + webeleName + "']").css("background-color", data.colorList[data.webele[webeleName][responsiveName][animationSelect].color.BG])
  $("[data-" + data.name + "='" + webeleName + "']").css("color", data.colorList[data.webele[webeleName][responsiveName][animationSelect].color.text])
  
  $("[data-" + data.name + "='" + webeleName + "']").find("a, i").css("cssText", "color: " + data.colorList[data.webele[webeleName][responsiveName][animationSelect].color.link] + " !important;")
  $("[data-" + data.name + "='" + webeleName + "']").find("a").hover (e) =>
    $(e.currentTarget).add($("i",e.currentTarget)).css("cssText", "color: " + data.colorList[data.webele[$(e.currentTarget).parents("[data-" + data.name + "]").data(data.name)][responsiveName][animationSelect].color.hlink])
  , (e) =>
    $(e.currentTarget).add($("i",e.currentTarget)).css("cssText", "color: " + data.colorList[data.webele[$(e.currentTarget).parents("[data-" + data.name + "]").data(data.name)][responsiveName][animationSelect].color.link])

#------------------------------------------------------------------------------
# getHSL
#------------------------------------------------------------------------------
getHSL = () -> 
  hslSprit = $("#colorInput_debug").val().split("_")[0].split(":")
  if hslSprit[0] == "NaN" || hslSprit[1] == "NaN" || hslSprit[2] == "NaN"
    return
  
  return  {
    H: Number(hslSprit[0])
    S: Number(hslSprit[1])
    L: Number(hslSprit[2])
  }